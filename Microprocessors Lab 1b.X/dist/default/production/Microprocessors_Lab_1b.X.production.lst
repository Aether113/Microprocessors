

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Oct 27 15:35:36 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    14  0000                     
    15                           	psect	mediumconst
    16  007DFE                     __pmediumconst:
    17                           	opt stack 0
    18  007DFE  00                 	db	0
    19  007DFF                     _values1:
    20                           	opt stack 0
    21  007DFF  08                 	db	8
    22  007E00  00                 	db	0
    23  007E01  15                 	db	21
    24  007E02  24                 	db	36
    25  007E03  00                 	db	0
    26  007E04  06                 	db	6
    27  007E05  38                 	db	56
    28  007E06  00                 	db	0
    29  007E07  00                 	db	0
    30  007E08  49                 	db	73
    31  007E09  30                 	db	48
    32  007E0A  00                 	db	0
    33  007E0B  17                 	db	23
    34  007E0C  15                 	db	21
    35  007E0D  35                 	db	53
    36  007E0E  0D                 	db	13
    37  007E0F  08                 	db	8
    38  007E10  00                 	db	0
    39  007E11  24                 	db	36
    40  007E12  40                 	db	64
    41  007E13  2B                 	db	43
    42  007E14  4D                 	db	77
    43  007E15  4E                 	db	78
    44  007E16  10                 	db	16
    45  007E17  53                 	db	83
    46  007E18  00                 	db	0
    47  007E19  00                 	db	0
    48  007E1A  24                 	db	36
    49  007E1B  19                 	db	25
    50  007E1C  00                 	db	0
    51  007E1D  4D                 	db	77
    52  007E1E  3F                 	db	63
    53  007E1F  00                 	db	0
    54  007E20  1D                 	db	29
    55  007E21  00                 	db	0
    56  007E22  4B                 	db	75
    57  007E23  00                 	db	0
    58  007E24  24                 	db	36
    59  007E25  00                 	db	0
    60  007E26  13                 	db	19
    61  007E27  0A                 	db	10
    62  007E28  65                 	db	101
    63  007E29  00                 	db	0
    64  007E2A  00                 	db	0
    65  007E2B  66                 	db	102
    66  007E2C  3E                 	db	62
    67  007E2D  10                 	db	16
    68  007E2E  60                 	db	96
    69  007E2F  68                 	db	104
    70  007E30  5E                 	db	94
    71  007E31  30                 	db	48
    72  007E32  19                 	db	25
    73  007E33  47                 	db	71
    74  007E34  69                 	db	105
    75  007E35  16                 	db	22
    76  007E36  56                 	db	86
    77  007E37  01                 	db	1
    78  007E38  1C                 	db	28
    79  007E39  00                 	db	0
    80  007E3A  1C                 	db	28
    81  007E3B  06                 	db	6
    82  007E3C  07                 	db	7
    83  007E3D  2D                 	db	45
    84  007E3E  29                 	db	41
    85  007E3F  24                 	db	36
    86  007E40  04                 	db	4
    87  007E41  2A                 	db	42
    88  007E42  0E                 	db	14
    89  007E43  05                 	db	5
    90  007E44  6C                 	db	108
    91  007E45  26                 	db	38
    92  007E46  72                 	db	114
    93  007E47  32                 	db	50
    94  007E48  5D                 	db	93
    95  007E49  77                 	db	119
    96  007E4A  4F                 	db	79
    97  007E4B  51                 	db	81
    98  007E4C  8C                 	db	140
    99  007E4D  38                 	db	56
   100  007E4E  29                 	db	41
   101  007E4F  1B                 	db	27
   102  007E50  29                 	db	41
   103  007E51  35                 	db	53
   104  007E52  7A                 	db	122
   105  007E53  67                 	db	103
   106  007E54  36                 	db	54
   107  007E55  41                 	db	65
   108  007E56  51                 	db	81
   109  007E57  67                 	db	103
   110  007E58  61                 	db	97
   111  007E59  50                 	db	80
   112  007E5A  79                 	db	121
   113  007E5B  1F                 	db	31
   114  007E5C  66                 	db	102
   115  007E5D  74                 	db	116
   116  007E5E  84                 	db	132
   117  007E5F  51                 	db	81
   118  007E60  9E                 	db	158
   119  007E61  40                 	db	64
   120  007E62  3C                 	db	60
   121  007E63  81                 	db	129
   122  007E64  91                 	db	145
   123  007E65  41                 	db	65
   124  007E66  96                 	db	150
   125  007E67  2C                 	db	44
   126  007E68  90                 	db	144
   127  007E69  6D                 	db	109
   128  007E6A  52                 	db	82
   129  007E6B  A6                 	db	166
   130  007E6C  66                 	db	102
   131  007E6D  AD                 	db	173
   132  007E6E  67                 	db	103
   133  007E6F  83                 	db	131
   134  007E70  74                 	db	116
   135  007E71  96                 	db	150
   136  007E72  99                 	db	153
   137  007E73  AF                 	db	175
   138  007E74  AC                 	db	172
   139  007E75  5B                 	db	91
   140  007E76  63                 	db	99
   141  007E77  9D                 	db	157
   142  007E78  4A                 	db	74
   143  007E79  B4                 	db	180
   144  007E7A  8B                 	db	139
   145  007E7B  96                 	db	150
   146  007E7C  57                 	db	87
   147  007E7D  8F                 	db	143
   148  007E7E  AF                 	db	175
   149  007E7F  54                 	db	84
   150  007E80  B9                 	db	185
   151  007E81  7B                 	db	123
   152  007E82  7A                 	db	122
   153  007E83  A5                 	db	165
   154  007E84  73                 	db	115
   155  007E85  B4                 	db	180
   156  007E86  9A                 	db	154
   157  007E87  93                 	db	147
   158  007E88  C6                 	db	198
   159  007E89  BF                 	db	191
   160  007E8A  88                 	db	136
   161  007E8B  86                 	db	134
   162  007E8C  9E                 	db	158
   163  007E8D  76                 	db	118
   164  007E8E  63                 	db	99
   165  007E8F  6D                 	db	109
   166  007E90  A4                 	db	164
   167  007E91  CB                 	db	203
   168  007E92  A5                 	db	165
   169  007E93  B1                 	db	177
   170  007E94  8A                 	db	138
   171  007E95  85                 	db	133
   172  007E96  61                 	db	97
   173  007E97  6E                 	db	110
   174  007E98  85                 	db	133
   175  007E99  D9                 	db	217
   176  007E9A  C2                 	db	194
   177  007E9B  C2                 	db	194
   178  007E9C  7A                 	db	122
   179  007E9D  93                 	db	147
   180  007E9E  CA                 	db	202
   181  007E9F  CF                 	db	207
   182  007EA0  A1                 	db	161
   183  007EA1  88                 	db	136
   184  007EA2  C6                 	db	198
   185  007EA3  A8                 	db	168
   186  007EA4  71                 	db	113
   187  007EA5  A0                 	db	160
   188  007EA6  6B                 	db	107
   189  007EA7  77                 	db	119
   190  007EA8  D9                 	db	217
   191  007EA9  9E                 	db	158
   192  007EAA  B6                 	db	182
   193  007EAB  85                 	db	133
   194  007EAC  B6                 	db	182
   195  007EAD  73                 	db	115
   196  007EAE  EB                 	db	235
   197  007EAF  D7                 	db	215
   198  007EB0  EF                 	db	239
   199  007EB1  97                 	db	151
   200  007EB2  C7                 	db	199
   201  007EB3  F0                 	db	240
   202  007EB4  ED                 	db	237
   203  007EB5  E2                 	db	226
   204  007EB6  C5                 	db	197
   205  007EB7  E0                 	db	224
   206  007EB8  B9                 	db	185
   207  007EB9  DE                 	db	222
   208  007EBA  87                 	db	135
   209  007EBB  CC                 	db	204
   210  007EBC  9F                 	db	159
   211  007EBD  BE                 	db	190
   212  007EBE  85                 	db	133
   213  007EBF  CA                 	db	202
   214  007EC0  FF                 	db	255
   215  007EC1  9D                 	db	157
   216  007EC2  B6                 	db	182
   217  007EC3  91                 	db	145
   218  007EC4  F5                 	db	245
   219  007EC5  EC                 	db	236
   220  007EC6  B1                 	db	177
   221  007EC7  9D                 	db	157
   222  007EC8  FB                 	db	251
   223  007EC9  D6                 	db	214
   224  007ECA  FF                 	db	255
   225  007ECB  AD                 	db	173
   226  007ECC  91                 	db	145
   227  007ECD  AF                 	db	175
   228  007ECE  C3                 	db	195
   229  007ECF  93                 	db	147
   230  007ED0  9A                 	db	154
   231  007ED1  D1                 	db	209
   232  007ED2  FF                 	db	255
   233  007ED3  C1                 	db	193
   234  007ED4  B3                 	db	179
   235  007ED5  F3                 	db	243
   236  007ED6  AE                 	db	174
   237  007ED7  B2                 	db	178
   238  007ED8  F0                 	db	240
   239  007ED9  AF                 	db	175
   240  007EDA  B7                 	db	183
   241  007EDB  FF                 	db	255
   242  007EDC  B5                 	db	181
   243  007EDD  BA                 	db	186
   244  007EDE  A9                 	db	169
   245  007EDF  B1                 	db	177
   246  007EE0  A7                 	db	167
   247  007EE1  FC                 	db	252
   248  007EE2  FF                 	db	255
   249  007EE3  F7                 	db	247
   250  007EE4  DC                 	db	220
   251  007EE5  BC                 	db	188
   252  007EE6  F1                 	db	241
   253  007EE7  FF                 	db	255
   254  007EE8  E9                 	db	233
   255  007EE9  FF                 	db	255
   256  007EEA  DC                 	db	220
   257  007EEB  FF                 	db	255
   258  007EEC  FF                 	db	255
   259  007EED  E5                 	db	229
   260  007EEE  DE                 	db	222
   261  007EEF  FF                 	db	255
   262  007EF0  FF                 	db	255
   263  007EF1  FB                 	db	251
   264  007EF2  C7                 	db	199
   265  007EF3  FF                 	db	255
   266  007EF4  FF                 	db	255
   267  007EF5  FF                 	db	255
   268  007EF6  FF                 	db	255
   269  007EF7  FF                 	db	255
   270  007EF8  D5                 	db	213
   271  007EF9  D8                 	db	216
   272  007EFA  EC                 	db	236
   273  007EFB  F1                 	db	241
   274  007EFC  BD                 	db	189
   275  007EFD  FF                 	db	255
   276  007EFE  FF                 	db	255
   277  007EFF  D7                 	db	215
   278  007F00  D7                 	db	215
   279  007F01  EF                 	db	239
   280  007F02  FF                 	db	255
   281  007F03  C2                 	db	194
   282  007F04  BD                 	db	189
   283  007F05  CE                 	db	206
   284  007F06  FF                 	db	255
   285  007F07  FB                 	db	251
   286  007F08  D6                 	db	214
   287  007F09  FF                 	db	255
   288  007F0A  FF                 	db	255
   289  007F0B  FF                 	db	255
   290  007F0C  D1                 	db	209
   291  007F0D  C0                 	db	192
   292  007F0E  D2                 	db	210
   293  007F0F  FF                 	db	255
   294  007F10  FF                 	db	255
   295  007F11  FF                 	db	255
   296  007F12  B6                 	db	182
   297  007F13  E8                 	db	232
   298  007F14  FD                 	db	253
   299  007F15  CD                 	db	205
   300  007F16  BE                 	db	190
   301  007F17  FF                 	db	255
   302  007F18  C8                 	db	200
   303  007F19  ED                 	db	237
   304  007F1A  B8                 	db	184
   305  007F1B  FF                 	db	255
   306  007F1C  FF                 	db	255
   307  007F1D  E6                 	db	230
   308  007F1E  FF                 	db	255
   309  007F1F  E0                 	db	224
   310  007F20  C4                 	db	196
   311  007F21  D1                 	db	209
   312  007F22  D7                 	db	215
   313  007F23  F2                 	db	242
   314  007F24  E7                 	db	231
   315  007F25  B6                 	db	182
   316  007F26  ED                 	db	237
   317  007F27  9E                 	db	158
   318  007F28  E6                 	db	230
   319  007F29  F1                 	db	241
   320  007F2A  DE                 	db	222
   321  007F2B  B6                 	db	182
   322  007F2C  F3                 	db	243
   323  007F2D  A2                 	db	162
   324  007F2E  C4                 	db	196
   325  007F2F  E1                 	db	225
   326  007F30  A5                 	db	165
   327  007F31  E1                 	db	225
   328  007F32  A1                 	db	161
   329  007F33  E6                 	db	230
   330  007F34  B9                 	db	185
   331  007F35  BA                 	db	186
   332  007F36  FF                 	db	255
   333  007F37  C8                 	db	200
   334  007F38  CF                 	db	207
   335  007F39  F3                 	db	243
   336  007F3A  D3                 	db	211
   337  007F3B  CB                 	db	203
   338  007F3C  EC                 	db	236
   339  007F3D  CC                 	db	204
   340  007F3E  C9                 	db	201
   341  007F3F  D3                 	db	211
   342  007F40  AF                 	db	175
   343  007F41  91                 	db	145
   344  007F42  89                 	db	137
   345  007F43  F8                 	db	248
   346  007F44  85                 	db	133
   347  007F45  8E                 	db	142
   348  007F46  BD                 	db	189
   349  007F47  D0                 	db	208
   350  007F48  E2                 	db	226
   351  007F49  94                 	db	148
   352  007F4A  D2                 	db	210
   353  007F4B  A2                 	db	162
   354  007F4C  BC                 	db	188
   355  007F4D  AF                 	db	175
   356  007F4E  B0                 	db	176
   357  007F4F  7D                 	db	125
   358  007F50  C3                 	db	195
   359  007F51  B9                 	db	185
   360  007F52  99                 	db	153
   361  007F53  BE                 	db	190
   362  007F54  86                 	db	134
   363  007F55  8D                 	db	141
   364  007F56  91                 	db	145
   365  007F57  AE                 	db	174
   366  007F58  89                 	db	137
   367  007F59  D5                 	db	213
   368  007F5A  6C                 	db	108
   369  007F5B  DF                 	db	223
   370  007F5C  D3                 	db	211
   371  007F5D  DF                 	db	223
   372  007F5E  B6                 	db	182
   373  007F5F  D1                 	db	209
   374  007F60  9B                 	db	155
   375  007F61  68                 	db	104
   376  007F62  67                 	db	103
   377  007F63  D3                 	db	211
   378  007F64  85                 	db	133
   379  007F65  A0                 	db	160
   380  007F66  93                 	db	147
   381  007F67  88                 	db	136
   382  007F68  98                 	db	152
   383  007F69  91                 	db	145
   384  007F6A  C5                 	db	197
   385  007F6B  98                 	db	152
   386  007F6C  79                 	db	121
   387  007F6D  54                 	db	84
   388  007F6E  A5                 	db	165
   389  007F6F  64                 	db	100
   390  007F70  85                 	db	133
   391  007F71  54                 	db	84
   392  007F72  A0                 	db	160
   393  007F73  B7                 	db	183
   394  007F74  A6                 	db	166
   395  007F75  60                 	db	96
   396  007F76  69                 	db	105
   397  007F77  9C                 	db	156
   398  007F78  B8                 	db	184
   399  007F79  BF                 	db	191
   400  007F7A  89                 	db	137
   401  007F7B  4F                 	db	79
   402  007F7C  4C                 	db	76
   403  007F7D  95                 	db	149
   404  007F7E  6D                 	db	109
   405  007F7F  69                 	db	105
   406  007F80  53                 	db	83
   407  007F81  A4                 	db	164
   408  007F82  6A                 	db	106
   409  007F83  A0                 	db	160
   410  007F84  3D                 	db	61
   411  007F85  93                 	db	147
   412  007F86  A4                 	db	164
   413  007F87  46                 	db	70
   414  007F88  7E                 	db	126
   415  007F89  47                 	db	71
   416  007F8A  89                 	db	137
   417  007F8B  41                 	db	65
   418  007F8C  8B                 	db	139
   419  007F8D  63                 	db	99
   420  007F8E  6C                 	db	108
   421  007F8F  7E                 	db	126
   422  007F90  97                 	db	151
   423  007F91  35                 	db	53
   424  007F92  89                 	db	137
   425  007F93  AB                 	db	171
   426  007F94  3E                 	db	62
   427  007F95  2F                 	db	47
   428  007F96  74                 	db	116
   429  007F97  76                 	db	118
   430  007F98  A5                 	db	165
   431  007F99  55                 	db	85
   432  007F9A  5A                 	db	90
   433  007F9B  72                 	db	114
   434  007F9C  8E                 	db	142
   435  007F9D  69                 	db	105
   436  007F9E  7B                 	db	123
   437  007F9F  9A                 	db	154
   438  007FA0  3B                 	db	59
   439  007FA1  76                 	db	118
   440  007FA2  4A                 	db	74
   441  007FA3  94                 	db	148
   442  007FA4  37                 	db	55
   443  007FA5  85                 	db	133
   444  007FA6  92                 	db	146
   445  007FA7  91                 	db	145
   446  007FA8  4E                 	db	78
   447  007FA9  90                 	db	144
   448  007FAA  7D                 	db	125
   449  007FAB  64                 	db	100
   450  007FAC  69                 	db	105
   451  007FAD  38                 	db	56
   452  007FAE  34                 	db	52
   453  007FAF  2A                 	db	42
   454  007FB0  7E                 	db	126
   455  007FB1  81                 	db	129
   456  007FB2  86                 	db	134
   457  007FB3  84                 	db	132
   458  007FB4  0D                 	db	13
   459  007FB5  70                 	db	112
   460  007FB6  13                 	db	19
   461  007FB7  12                 	db	18
   462  007FB8  20                 	db	32
   463  007FB9  2C                 	db	44
   464  007FBA  6B                 	db	107
   465  007FBB  08                 	db	8
   466  007FBC  40                 	db	64
   467  007FBD  18                 	db	24
   468  007FBE  04                 	db	4
   469  007FBF  27                 	db	39
   470  007FC0  00                 	db	0
   471  007FC1  34                 	db	52
   472  007FC2  6A                 	db	106
   473  007FC3  28                 	db	40
   474  007FC4  20                 	db	32
   475  007FC5  69                 	db	105
   476  007FC6  0F                 	db	15
   477  007FC7  56                 	db	86
   478  007FC8  03                 	db	3
   479  007FC9  75                 	db	117
   480  007FCA  33                 	db	51
   481  007FCB  00                 	db	0
   482  007FCC  49                 	db	73
   483  007FCD  19                 	db	25
   484  007FCE  51                 	db	81
   485  007FCF  4A                 	db	74
   486  007FD0  63                 	db	99
   487  007FD1  00                 	db	0
   488  007FD2  6D                 	db	109
   489  007FD3  3E                 	db	62
   490  007FD4  54                 	db	84
   491  007FD5  13                 	db	19
   492  007FD6  59                 	db	89
   493  007FD7  34                 	db	52
   494  007FD8  5E                 	db	94
   495  007FD9  5A                 	db	90
   496  007FDA  5B                 	db	91
   497  007FDB  2D                 	db	45
   498  007FDC  37                 	db	55
   499  007FDD  45                 	db	69
   500  007FDE  4F                 	db	79
   501  007FDF  4E                 	db	78
   502  007FE0  4F                 	db	79
   503  007FE1  00                 	db	0
   504  007FE2  03                 	db	3
   505  007FE3  00                 	db	0
   506  007FE4  00                 	db	0
   507  007FE5  39                 	db	57
   508  007FE6  00                 	db	0
   509  007FE7  3B                 	db	59
   510  007FE8  24                 	db	36
   511  007FE9  20                 	db	32
   512  007FEA  00                 	db	0
   513  007FEB  05                 	db	5
   514  007FEC  00                 	db	0
   515  007FED  00                 	db	0
   516  007FEE  3A                 	db	58
   517  007FEF  00                 	db	0
   518  007FF0  1A                 	db	26
   519  007FF1  43                 	db	67
   520  007FF2  00                 	db	0
   521  007FF3  00                 	db	0
   522  007FF4  24                 	db	36
   523  007FF5  00                 	db	0
   524  007FF6  3D                 	db	61
   525  007FF7  00                 	db	0
   526  007FF8  33                 	db	51
   527  007FF9  00                 	db	0
   528  007FFA  05                 	db	5
   529  007FFB  00                 	db	0
   530  007FFC  00                 	db	0
   531  007FFD  03                 	db	3
   532  007FFE  1A                 	db	26
   533  007FFF                     __end_of_values1:
   534                           	opt stack 0
   535  0000                     _ADCON1	set	4033
   536  0000                     _CMCON	set	4020
   537  0000                     _PORTA	set	3968
   538  0000                     _PORTAbits	set	3968
   539  0000                     _PORTB	set	3969
   540  0000                     _PORTC	set	3970
   541  0000                     _TRISA	set	3986
   542  0000                     _TRISB	set	3987
   543  0000                     _TRISC	set	3988
   544  007FFF  00                 	db	0	; dummy byte at the end
   545  0000                     
   546                           ; #config settings
   547                           
   548                           	psect	cinit
   549  007AF0                     __pcinit:
   550                           	opt stack 0
   551  007AF0                     start_initialization:
   552                           	opt stack 0
   553  007AF0                     __initialization:
   554                           	opt stack 0
   555                           
   556                           ; Clear objects allocated to COMRAM (4 bytes)
   557  007AF0  6A1E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   558  007AF2  6A1D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   559  007AF4  6A1C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   560  007AF6  6A1B               	clrf	__pbssCOMRAM& (0+255),c
   561  007AF8                     end_of_initialization:
   562                           	opt stack 0
   563  007AF8                     __end_of__initialization:
   564                           	opt stack 0
   565  007AF8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   566  007AFA  6EF8               	movwf	tblptru,c
   567  007AFC  0100               	movlb	0
   568  007AFE  EFE3  F03D         	goto	_main	;jump to C main() function
   569                           tblptru	equ	0xFF8
   570                           
   571                           	psect	bssCOMRAM
   572  00001B                     __pbssCOMRAM:
   573                           	opt stack 0
   574  00001B                     _output:
   575                           	opt stack 0
   576  00001B                     	ds	2
   577  00001D                     _temp:
   578                           	opt stack 0
   579  00001D                     	ds	2
   580                           tblptru	equ	0xFF8
   581                           
   582                           	psect	cstackCOMRAM
   583  000001                     __pcstackCOMRAM:
   584                           	opt stack 0
   585  000001                     ?___awdiv:
   586                           	opt stack 0
   587  000001                     ___awdiv@dividend:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0x0
   591  000001                     	ds	2
   592  000003                     ___awdiv@divisor:
   593                           	opt stack 0
   594                           
   595                           ; 2 bytes @ 0x2
   596  000003                     	ds	2
   597  000005                     ___awdiv@counter:
   598                           	opt stack 0
   599                           
   600                           ; 1 bytes @ 0x4
   601  000005                     	ds	1
   602  000006                     ___awdiv@sign:
   603                           	opt stack 0
   604                           
   605                           ; 1 bytes @ 0x5
   606  000006                     	ds	1
   607  000007                     ___awdiv@quotient:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0x6
   611  000007                     	ds	2
   612  000009                     ??_main:
   613                           
   614                           ; 0 bytes @ 0x8
   615  000009                     	ds	2
   616  00000B                     main@i_120:
   617                           	opt stack 0
   618                           
   619                           ; 2 bytes @ 0xA
   620  00000B                     	ds	2
   621  00000D                     main@j:
   622                           	opt stack 0
   623                           
   624                           ; 2 bytes @ 0xC
   625  00000D                     	ds	2
   626  00000F                     main@k:
   627                           	opt stack 0
   628                           
   629                           ; 2 bytes @ 0xE
   630  00000F                     	ds	2
   631  000011                     main@k_122:
   632                           	opt stack 0
   633                           
   634                           ; 2 bytes @ 0x10
   635  000011                     	ds	2
   636  000013                     main@l:
   637                           	opt stack 0
   638                           
   639                           ; 2 bytes @ 0x12
   640  000013                     	ds	2
   641  000015                     main@i_124:
   642                           	opt stack 0
   643                           
   644                           ; 2 bytes @ 0x14
   645  000015                     	ds	2
   646  000017                     main@i:
   647                           	opt stack 0
   648                           
   649                           ; 2 bytes @ 0x16
   650  000017                     	ds	2
   651  000019                     main@j_121:
   652                           	opt stack 0
   653                           
   654                           ; 2 bytes @ 0x18
   655  000019                     	ds	2
   656                           tblptru	equ	0xFF8
   657                           
   658 ;;
   659 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   660 ;;
   661 ;; *************** function _main *****************
   662 ;; Defined at:
   663 ;;		line 65 in file "main.c"
   664 ;; Parameters:    Size  Location     Type
   665 ;;		None
   666 ;; Auto vars:     Size  Location     Type
   667 ;;  i               2   20[COMRAM] int 
   668 ;;  j               2   24[COMRAM] int 
   669 ;;  l               2   18[COMRAM] int 
   670 ;;  k               2   16[COMRAM] int 
   671 ;;  i               2   10[COMRAM] int 
   672 ;;  i               2   22[COMRAM] int 
   673 ;;  k               2   14[COMRAM] int 
   674 ;;  j               2   12[COMRAM] int 
   675 ;; Return value:  Size  Location     Type
   676 ;;		None               void
   677 ;; Registers used:
   678 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
   679 ;; Tracked objects:
   680 ;;		On entry : 0/0
   681 ;;		On exit  : 0/0
   682 ;;		Unchanged: 0/0
   683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   684 ;;      Params:         0       0       0       0       0       0       0       0       0
   685 ;;      Locals:        16       0       0       0       0       0       0       0       0
   686 ;;      Temps:          2       0       0       0       0       0       0       0       0
   687 ;;      Totals:        18       0       0       0       0       0       0       0       0
   688 ;;Total ram usage:       18 bytes
   689 ;; Hardware stack levels required when called:    1
   690 ;; This function calls:
   691 ;;		___awdiv
   692 ;;		_initChip
   693 ;; This function is called by:
   694 ;;		Startup code after reset
   695 ;; This function uses a non-reentrant model
   696 ;;
   697                           
   698                           	psect	text0
   699  007BC6                     __ptext0:
   700                           	opt stack 0
   701  007BC6                     _main:
   702                           	opt stack 30
   703                           
   704                           ;main.c: 68: initChip();
   705                           
   706                           ;incstack = 0
   707  007BC6  EC81  F03D         	call	_initChip	;wreg free
   708                           
   709                           ;main.c: 70: while(PORTAbits.RA1 == 0) {
   710  007BCA  D115               	goto	l30
   711  007BCC                     l31:
   712                           
   713                           ;main.c: 71: if(PORTAbits.RA0 == 0)
   714  007BCC  B080               	btfsc	3968,0,c	;volatile
   715  007BCE  D042               	goto	l32
   716                           
   717                           ;main.c: 72: {
   718                           ;main.c: 73: int i = 0;
   719  007BD0  0E00               	movlw	0
   720  007BD2  6E18               	movwf	main@i+1,c
   721  007BD4  0E00               	movlw	0
   722  007BD6  6E17               	movwf	main@i,c
   723                           
   724                           ;main.c: 74: int j = 0;
   725  007BD8  0E00               	movlw	0
   726  007BDA  6E0E               	movwf	main@j+1,c
   727  007BDC  0E00               	movlw	0
   728  007BDE  6E0D               	movwf	main@j,c
   729                           
   730                           ;main.c: 75: int k = 0;
   731  007BE0  0E00               	movlw	0
   732  007BE2  6E10               	movwf	main@k+1,c
   733  007BE4  0E00               	movlw	0
   734  007BE6  6E0F               	movwf	main@k,c
   735                           
   736                           ;main.c: 76: for(i = 0; i < 512; i++)
   737  007BE8  0E00               	movlw	0
   738  007BEA  6E18               	movwf	main@i+1,c
   739  007BEC  0E00               	movlw	0
   740  007BEE  6E17               	movwf	main@i,c
   741  007BF0  5018               	movf	main@i+1,w,c
   742  007BF2  0A80               	xorlw	128
   743  007BF4  0F7E               	addlw	-130
   744  007BF6  0E00               	movlw	0
   745  007BF8  B4D8               	btfsc	status,2,c
   746  007BFA  5C17               	subwf	main@i,w,c
   747  007BFC  B0D8               	btfsc	status,0,c
   748  007BFE  D02A               	goto	l32
   749                           
   750                           ;main.c: 77: {
   751                           ;main.c: 78: PORTB = values1[i];
   752  007C00  0EFF               	movlw	low _values1
   753  007C02  2417               	addwf	main@i,w,c
   754  007C04  6EF6               	movwf	tblptrl,c
   755  007C06  0E7D               	movlw	high _values1
   756  007C08  2018               	addwfc	main@i+1,w,c
   757  007C0A  6EF7               	movwf	tblptrh,c
   758  007C0C                     	if	0	;There are less than 3 active tblptr bytes
   759  007C0C                     	endif
   760  007C0C  0008               	tblrd		*
   761  007C0E  CFF5 FF81          	movff	tablat,3969	;volatile
   762                           
   763                           ;main.c: 79: for(j = 0; j < 255; j++)
   764  007C12  0E00               	movlw	0
   765  007C14  6E0E               	movwf	main@j+1,c
   766  007C16  0E00               	movlw	0
   767  007C18  6E0D               	movwf	main@j,c
   768  007C1A  500E               	movf	main@j+1,w,c
   769  007C1C  0A80               	xorlw	128
   770  007C1E  0F80               	addlw	-128
   771  007C20  0EFF               	movlw	255
   772  007C22  B4D8               	btfsc	status,2,c
   773  007C24  5C0D               	subwf	main@j,w,c
   774  007C26  B0D8               	btfsc	status,0,c
   775  007C28  D012               	goto	l720
   776                           
   777                           ;main.c: 80: {
   778                           ;main.c: 81: for(k = 0; k < 255; k++);
   779  007C2A  0E00               	movlw	0
   780  007C2C  6E10               	movwf	main@k+1,c
   781  007C2E  0E00               	movlw	0
   782  007C30  6E0F               	movwf	main@k,c
   783  007C32  5010               	movf	main@k+1,w,c
   784  007C34  0A80               	xorlw	128
   785  007C36  0F80               	addlw	-128
   786  007C38  0EFF               	movlw	255
   787  007C3A  B4D8               	btfsc	status,2,c
   788  007C3C  5C0F               	subwf	main@k,w,c
   789  007C3E  B0D8               	btfsc	status,0,c
   790  007C40  D003               	goto	l716
   791  007C42  4A0F               	infsnz	main@k,f,c
   792  007C44  2A10               	incf	main@k+1,f,c
   793  007C46  D7F5               	goto	L1
   794  007C48                     l716:
   795  007C48  4A0D               	infsnz	main@j,f,c
   796  007C4A  2A0E               	incf	main@j+1,f,c
   797  007C4C  D7E6               	goto	L2
   798  007C4E                     l720:
   799  007C4E  4A17               	infsnz	main@i,f,c
   800  007C50  2A18               	incf	main@i+1,f,c
   801  007C52  D7CE               	goto	L3
   802  007C54                     l32:
   803                           
   804                           ;main.c: 82: }
   805                           ;main.c: 83: }
   806                           ;main.c: 84: }
   807                           ;main.c: 86: if(PORTAbits.RA0 == 1)
   808  007C54  A080               	btfss	3968,0,c	;volatile
   809  007C56  D0CF               	goto	l30
   810                           
   811                           ;main.c: 87: {
   812                           ;main.c: 89: int i = 0;
   813  007C58  0E00               	movlw	0
   814  007C5A  6E0C               	movwf	main@i_120+1,c
   815  007C5C  0E00               	movlw	0
   816  007C5E  6E0B               	movwf	main@i_120,c
   817                           
   818                           ;main.c: 90: int j = 0;
   819  007C60  0E00               	movlw	0
   820  007C62  6E1A               	movwf	main@j_121+1,c
   821  007C64  0E00               	movlw	0
   822  007C66  6E19               	movwf	main@j_121,c
   823                           
   824                           ;main.c: 91: int k = 0;
   825  007C68  0E00               	movlw	0
   826  007C6A  6E12               	movwf	main@k_122+1,c
   827  007C6C  0E00               	movlw	0
   828  007C6E  6E11               	movwf	main@k_122,c
   829                           
   830                           ;main.c: 92: int l = 0;
   831  007C70  0E00               	movlw	0
   832  007C72  6E14               	movwf	main@l+1,c
   833  007C74  0E00               	movlw	0
   834  007C76  6E13               	movwf	main@l,c
   835                           
   836                           ;main.c: 94: for(j = 0; j < 512; j++){
   837  007C78  0E00               	movlw	0
   838  007C7A  6E1A               	movwf	main@j_121+1,c
   839  007C7C  0E00               	movlw	0
   840  007C7E  6E19               	movwf	main@j_121,c
   841  007C80  501A               	movf	main@j_121+1,w,c
   842  007C82  0A80               	xorlw	128
   843  007C84  0F7E               	addlw	-130
   844  007C86  0E00               	movlw	0
   845  007C88  B4D8               	btfsc	status,2,c
   846  007C8A  5C19               	subwf	main@j_121,w,c
   847  007C8C  B0D8               	btfsc	status,0,c
   848  007C8E  D0B3               	goto	l30
   849                           
   850                           ;main.c: 95: for(int i = 0; i < 8; i++)
   851  007C90  0E00               	movlw	0
   852  007C92  6E16               	movwf	main@i_124+1,c
   853  007C94  0E00               	movlw	0
   854  007C96  6E15               	movwf	main@i_124,c
   855  007C98  5016               	movf	main@i_124+1,w,c
   856  007C9A  0A80               	xorlw	128
   857  007C9C  0F80               	addlw	-128
   858  007C9E  0E08               	movlw	8
   859  007CA0  B4D8               	btfsc	status,2,c
   860  007CA2  5C15               	subwf	main@i_124,w,c
   861  007CA4  B0D8               	btfsc	status,0,c
   862  007CA6  D018               	goto	l742
   863                           
   864                           ;main.c: 96: {
   865                           ;main.c: 97: temp = temp + values1[i+j];
   866  007CA8  C015  F009         	movff	main@i_124,??_main
   867  007CAC  C016  F00A         	movff	main@i_124+1,??_main+1
   868  007CB0  5019               	movf	main@j_121,w,c
   869  007CB2  2609               	addwf	??_main,f,c
   870  007CB4  501A               	movf	main@j_121+1,w,c
   871  007CB6  220A               	addwfc	??_main+1,f,c
   872  007CB8  0EFF               	movlw	low _values1
   873  007CBA  2409               	addwf	??_main,w,c
   874  007CBC  6EF6               	movwf	tblptrl,c
   875  007CBE  0E7D               	movlw	high _values1
   876  007CC0  200A               	addwfc	??_main+1,w,c
   877  007CC2  6EF7               	movwf	tblptrh,c
   878  007CC4                     	if	0	;There are less than 3 active tblptr bytes
   879  007CC4                     	endif
   880  007CC4  0008               	tblrd		*
   881  007CC6  50F5               	movf	tablat,w,c
   882  007CC8  241D               	addwf	_temp,w,c
   883  007CCA  6E1D               	movwf	_temp,c
   884  007CCC  0E00               	movlw	0
   885  007CCE  201E               	addwfc	_temp+1,w,c
   886  007CD0  6E1E               	movwf	_temp+1,c
   887  007CD2  4A15               	infsnz	main@i_124,f,c
   888  007CD4  2A16               	incf	main@i_124+1,f,c
   889  007CD6  D7E0               	goto	L4
   890  007CD8                     l742:
   891                           
   892                           ;main.c: 98: }
   893                           ;main.c: 100: output = temp/8;
   894  007CD8  C01D  F001         	movff	_temp,___awdiv@dividend
   895  007CDC  C01E  F002         	movff	_temp+1,___awdiv@dividend+1
   896  007CE0  0E00               	movlw	0
   897  007CE2  6E04               	movwf	___awdiv@divisor+1,c
   898  007CE4  0E08               	movlw	8
   899  007CE6  6E03               	movwf	___awdiv@divisor,c
   900  007CE8  EC91  F03D         	call	___awdiv	;wreg free
   901  007CEC  C001  F01B         	movff	?___awdiv,_output
   902  007CF0  C002  F01C         	movff	?___awdiv+1,_output+1
   903                           
   904                           ;main.c: 104: if(output >= 240)
   905  007CF4  501C               	movf	_output+1,w,c
   906  007CF6  0A80               	xorlw	128
   907  007CF8  0F80               	addlw	-128
   908  007CFA  0EF0               	movlw	240
   909  007CFC  B4D8               	btfsc	status,2,c
   910  007CFE  5C1B               	subwf	_output,w,c
   911  007D00  A0D8               	btfss	status,0,c
   912  007D02  D002               	goto	l748
   913                           
   914                           ;main.c: 105: {
   915                           ;main.c: 106: PORTB = 0b11111111;
   916  007D04  6881               	setf	3969,c	;volatile
   917                           
   918                           ;main.c: 107: }
   919  007D06  D052               	goto	l45
   920  007D08                     l748:
   921                           
   922                           ;main.c: 109: else if (output >= 208)
   923  007D08  501C               	movf	_output+1,w,c
   924  007D0A  0A80               	xorlw	128
   925  007D0C  0F80               	addlw	-128
   926  007D0E  0ED0               	movlw	208
   927  007D10  B4D8               	btfsc	status,2,c
   928  007D12  5C1B               	subwf	_output,w,c
   929  007D14  A0D8               	btfss	status,0,c
   930  007D16  D002               	goto	l752
   931                           
   932                           ;main.c: 110: {
   933                           ;main.c: 111: PORTB = 0b01111111;
   934  007D18  0E7F               	movlw	127
   935  007D1A  D047               	goto	L11
   936  007D1C                     l752:
   937                           
   938                           ;main.c: 114: else if (output >= 176)
   939  007D1C  501C               	movf	_output+1,w,c
   940  007D1E  0A80               	xorlw	128
   941  007D20  0F80               	addlw	-128
   942  007D22  0EB0               	movlw	176
   943  007D24  B4D8               	btfsc	status,2,c
   944  007D26  5C1B               	subwf	_output,w,c
   945  007D28  A0D8               	btfss	status,0,c
   946  007D2A  D002               	goto	l756
   947                           
   948                           ;main.c: 115: {
   949                           ;main.c: 116: PORTB = 0b00111111;
   950  007D2C  0E3F               	movlw	63
   951  007D2E  D03D               	goto	L11
   952  007D30                     l756:
   953                           
   954                           ;main.c: 118: else if (output >= 144)
   955  007D30  501C               	movf	_output+1,w,c
   956  007D32  0A80               	xorlw	128
   957  007D34  0F80               	addlw	-128
   958  007D36  0E90               	movlw	144
   959  007D38  B4D8               	btfsc	status,2,c
   960  007D3A  5C1B               	subwf	_output,w,c
   961  007D3C  A0D8               	btfss	status,0,c
   962  007D3E  D002               	goto	l760
   963                           
   964                           ;main.c: 119: {
   965                           ;main.c: 120: PORTB = 0b00011111;
   966  007D40  0E1F               	movlw	31
   967  007D42  D033               	goto	L11
   968  007D44                     l760:
   969                           
   970                           ;main.c: 122: else if (output >= 112)
   971  007D44  501C               	movf	_output+1,w,c
   972  007D46  0A80               	xorlw	128
   973  007D48  0F80               	addlw	-128
   974  007D4A  0E70               	movlw	112
   975  007D4C  B4D8               	btfsc	status,2,c
   976  007D4E  5C1B               	subwf	_output,w,c
   977  007D50  A0D8               	btfss	status,0,c
   978  007D52  D002               	goto	l764
   979                           
   980                           ;main.c: 123: {
   981                           ;main.c: 124: PORTB = 0b00001111;
   982  007D54  0E0F               	movlw	15
   983  007D56  D029               	goto	L11
   984  007D58                     l764:
   985                           
   986                           ;main.c: 126: else if (output >= 80)
   987  007D58  501C               	movf	_output+1,w,c
   988  007D5A  0A80               	xorlw	128
   989  007D5C  0F80               	addlw	-128
   990  007D5E  0E50               	movlw	80
   991  007D60  B4D8               	btfsc	status,2,c
   992  007D62  5C1B               	subwf	_output,w,c
   993  007D64  A0D8               	btfss	status,0,c
   994  007D66  D002               	goto	l768
   995                           
   996                           ;main.c: 127: {
   997                           ;main.c: 128: PORTB = 0b00000111;
   998  007D68  0E07               	movlw	7
   999  007D6A  D01F               	goto	L11
  1000  007D6C                     l768:
  1001                           
  1002                           ;main.c: 130: else if (output >= 48)
  1003  007D6C  501C               	movf	_output+1,w,c
  1004  007D6E  0A80               	xorlw	128
  1005  007D70  0F80               	addlw	-128
  1006  007D72  0E30               	movlw	48
  1007  007D74  B4D8               	btfsc	status,2,c
  1008  007D76  5C1B               	subwf	_output,w,c
  1009  007D78  A0D8               	btfss	status,0,c
  1010  007D7A  D002               	goto	l772
  1011                           
  1012                           ;main.c: 131: {
  1013                           ;main.c: 132: PORTB = 0b00000011;
  1014  007D7C  0E03               	movlw	3
  1015  007D7E  D015               	goto	L11
  1016  007D80                     l772:
  1017                           
  1018                           ;main.c: 134: else if (output >= 16)
  1019  007D80  501C               	movf	_output+1,w,c
  1020  007D82  0A80               	xorlw	128
  1021  007D84  0F80               	addlw	-128
  1022  007D86  0E10               	movlw	16
  1023  007D88  B4D8               	btfsc	status,2,c
  1024  007D8A  5C1B               	subwf	_output,w,c
  1025  007D8C  A0D8               	btfss	status,0,c
  1026  007D8E  D002               	goto	l776
  1027                           
  1028                           ;main.c: 135: {
  1029                           ;main.c: 136: PORTB = 0b00000001;
  1030  007D90  0E01               	movlw	1
  1031  007D92  D00B               	goto	L11
  1032  007D94                     l776:
  1033                           
  1034                           ;main.c: 138: else if (output < 16)
  1035  007D94  501C               	movf	_output+1,w,c
  1036  007D96  0A80               	xorlw	128
  1037  007D98  6EF3               	movwf	prodl,c
  1038  007D9A  0E80               	movlw	128
  1039  007D9C  5CF3               	subwf	prodl,w,c
  1040  007D9E  0E10               	movlw	16
  1041  007DA0  B4D8               	btfsc	status,2,c
  1042  007DA2  5C1B               	subwf	_output,w,c
  1043  007DA4  B0D8               	btfsc	status,0,c
  1044  007DA6  D002               	goto	l45
  1045                           
  1046                           ;main.c: 139: {
  1047                           ;main.c: 140: PORTB = 0b00000000;
  1048  007DA8  0E00               	movlw	0
  1049  007DAA                     L11:
  1050  007DAA  6E81               	movwf	3969,c	;volatile
  1051  007DAC                     l45:
  1052                           
  1053                           ;main.c: 141: }
  1054                           ;main.c: 144: temp = 0;
  1055  007DAC  0E00               	movlw	0
  1056  007DAE  6E1E               	movwf	_temp+1,c
  1057  007DB0  0E00               	movlw	0
  1058  007DB2  6E1D               	movwf	_temp,c
  1059                           
  1060                           ;main.c: 147: for(k = 0; k < 255; k++)
  1061  007DB4  0E00               	movlw	0
  1062  007DB6  6E12               	movwf	main@k_122+1,c
  1063  007DB8  0E00               	movlw	0
  1064  007DBA  6E11               	movwf	main@k_122,c
  1065  007DBC  5012               	movf	main@k_122+1,w,c
  1066  007DBE  0A80               	xorlw	128
  1067  007DC0  0F80               	addlw	-128
  1068  007DC2  0EFF               	movlw	255
  1069  007DC4  B4D8               	btfsc	status,2,c
  1070  007DC6  5C11               	subwf	main@k_122,w,c
  1071  007DC8  B0D8               	btfsc	status,0,c
  1072  007DCA  D012               	goto	l798
  1073                           
  1074                           ;main.c: 148: {
  1075                           ;main.c: 149: for(l = 0; l < 255; l++);
  1076  007DCC  0E00               	movlw	0
  1077  007DCE  6E14               	movwf	main@l+1,c
  1078  007DD0  0E00               	movlw	0
  1079  007DD2  6E13               	movwf	main@l,c
  1080  007DD4  5014               	movf	main@l+1,w,c
  1081  007DD6  0A80               	xorlw	128
  1082  007DD8  0F80               	addlw	-128
  1083  007DDA  0EFF               	movlw	255
  1084  007DDC  B4D8               	btfsc	status,2,c
  1085  007DDE  5C13               	subwf	main@l,w,c
  1086  007DE0  B0D8               	btfsc	status,0,c
  1087  007DE2  D003               	goto	l794
  1088  007DE4  4A13               	infsnz	main@l,f,c
  1089  007DE6  2A14               	incf	main@l+1,f,c
  1090  007DE8  D7F5               	goto	L12
  1091  007DEA                     l794:
  1092  007DEA  4A11               	infsnz	main@k_122,f,c
  1093  007DEC  2A12               	incf	main@k_122+1,f,c
  1094  007DEE  D7E6               	goto	L13
  1095  007DF0                     l798:
  1096  007DF0  4A19               	infsnz	main@j_121,f,c
  1097  007DF2  2A1A               	incf	main@j_121+1,f,c
  1098  007DF4  D745               	goto	L14
  1099  007DF6                     l30:
  1100  007DF6  A280               	btfss	3968,1,c	;volatile
  1101  007DF8  D6E9               	goto	l31
  1102  007DFA  EF00  F000         	goto	start
  1103  007DFE                     __end_of_main:
  1104                           	opt stack 0
  1105                           tblptru	equ	0xFF8
  1106                           tblptrh	equ	0xFF7
  1107                           tblptrl	equ	0xFF6
  1108                           tablat	equ	0xFF5
  1109                           prodl	equ	0xFF3
  1110                           status	equ	0xFD8
  1111                           
  1112 ;; *************** function _initChip *****************
  1113 ;; Defined at:
  1114 ;;		line 54 in file "main.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;		None
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;		None
  1119 ;; Return value:  Size  Location     Type
  1120 ;;		None               void
  1121 ;; Registers used:
  1122 ;;		wreg, status,2
  1123 ;; Tracked objects:
  1124 ;;		On entry : 0/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1128 ;;      Params:         0       0       0       0       0       0       0       0       0
  1129 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1130 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1131 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1132 ;;Total ram usage:        0 bytes
  1133 ;; Hardware stack levels used:    1
  1134 ;; This function calls:
  1135 ;;		Nothing
  1136 ;; This function is called by:
  1137 ;;		_main
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141                           	psect	text1
  1142  007B02                     __ptext1:
  1143                           	opt stack 0
  1144  007B02                     _initChip:
  1145                           	opt stack 30
  1146                           
  1147                           ;main.c: 55: PORTA = 0x00;
  1148                           
  1149                           ;incstack = 0
  1150  007B02  0E00               	movlw	0
  1151  007B04  6E80               	movwf	3968,c	;volatile
  1152                           
  1153                           ;main.c: 56: TRISA = 0xff;
  1154  007B06  6892               	setf	3986,c	;volatile
  1155                           
  1156                           ;main.c: 57: ADCON1 = 0x0f;
  1157  007B08  0E0F               	movlw	15
  1158  007B0A  6EC1               	movwf	4033,c	;volatile
  1159                           
  1160                           ;main.c: 58: CMCON = 0x07;
  1161  007B0C  0E07               	movlw	7
  1162  007B0E  6EB4               	movwf	4020,c	;volatile
  1163                           
  1164                           ;main.c: 59: PORTB = 0x00;
  1165  007B10  0E00               	movlw	0
  1166  007B12  6E81               	movwf	3969,c	;volatile
  1167                           
  1168                           ;main.c: 60: TRISB = 0x00;
  1169  007B14  0E00               	movlw	0
  1170  007B16  6E93               	movwf	3987,c	;volatile
  1171                           
  1172                           ;main.c: 61: PORTC = 0x00;
  1173  007B18  0E00               	movlw	0
  1174  007B1A  6E82               	movwf	3970,c	;volatile
  1175                           
  1176                           ;main.c: 62: TRISC = 0x00;
  1177  007B1C  0E00               	movlw	0
  1178  007B1E  6E94               	movwf	3988,c	;volatile
  1179  007B20  0012               	return	
  1180  007B22                     __end_of_initChip:
  1181                           	opt stack 0
  1182                           tblptru	equ	0xFF8
  1183                           tblptrh	equ	0xFF7
  1184                           tblptrl	equ	0xFF6
  1185                           tablat	equ	0xFF5
  1186                           prodl	equ	0xFF3
  1187                           status	equ	0xFD8
  1188                           
  1189 ;; *************** function ___awdiv *****************
  1190 ;; Defined at:
  1191 ;;		line 8 in file "/Applications/microchip/xc8/v1.33/sources/common/awdiv.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;  dividend        2    0[COMRAM] int 
  1194 ;;  divisor         2    2[COMRAM] int 
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;  quotient        2    6[COMRAM] int 
  1197 ;;  sign            1    5[COMRAM] unsigned char 
  1198 ;;  counter         1    4[COMRAM] unsigned char 
  1199 ;; Return value:  Size  Location     Type
  1200 ;;                  2    0[COMRAM] int 
  1201 ;; Registers used:
  1202 ;;		wreg, status,2, status,0, prodl
  1203 ;; Tracked objects:
  1204 ;;		On entry : 0/0
  1205 ;;		On exit  : 0/0
  1206 ;;		Unchanged: 0/0
  1207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1208 ;;      Params:         4       0       0       0       0       0       0       0       0
  1209 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1210 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1211 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1212 ;;Total ram usage:        8 bytes
  1213 ;; Hardware stack levels used:    1
  1214 ;; This function calls:
  1215 ;;		Nothing
  1216 ;; This function is called by:
  1217 ;;		_main
  1218 ;; This function uses a non-reentrant model
  1219 ;;
  1220                           
  1221                           	psect	text2
  1222  007B22                     __ptext2:
  1223                           	opt stack 0
  1224  007B22                     ___awdiv:
  1225                           	opt stack 30
  1226                           
  1227                           ;incstack = 0
  1228  007B22  0E00               	movlw	0
  1229  007B24  6E06               	movwf	___awdiv@sign,c
  1230  007B26  5004               	movf	___awdiv@divisor+1,w,c
  1231  007B28  0A80               	xorlw	128
  1232  007B2A  6EF3               	movwf	prodl,c
  1233  007B2C  0E80               	movlw	128
  1234  007B2E  5CF3               	subwf	prodl,w,c
  1235  007B30  0E00               	movlw	0
  1236  007B32  B4D8               	btfsc	status,2,c
  1237  007B34  5C03               	subwf	___awdiv@divisor,w,c
  1238  007B36  B0D8               	btfsc	status,0,c
  1239  007B38  D006               	goto	l654
  1240  007B3A  6C03               	negf	___awdiv@divisor,c
  1241  007B3C  1E04               	comf	___awdiv@divisor+1,f,c
  1242  007B3E  B0D8               	btfsc	status,0,c
  1243  007B40  2A04               	incf	___awdiv@divisor+1,f,c
  1244  007B42  0E01               	movlw	1
  1245  007B44  6E06               	movwf	___awdiv@sign,c
  1246  007B46                     l654:
  1247  007B46  5002               	movf	___awdiv@dividend+1,w,c
  1248  007B48  0A80               	xorlw	128
  1249  007B4A  6EF3               	movwf	prodl,c
  1250  007B4C  0E80               	movlw	128
  1251  007B4E  5CF3               	subwf	prodl,w,c
  1252  007B50  0E00               	movlw	0
  1253  007B52  B4D8               	btfsc	status,2,c
  1254  007B54  5C01               	subwf	___awdiv@dividend,w,c
  1255  007B56  B0D8               	btfsc	status,0,c
  1256  007B58  D006               	goto	l660
  1257  007B5A  6C01               	negf	___awdiv@dividend,c
  1258  007B5C  1E02               	comf	___awdiv@dividend+1,f,c
  1259  007B5E  B0D8               	btfsc	status,0,c
  1260  007B60  2A02               	incf	___awdiv@dividend+1,f,c
  1261  007B62  0E01               	movlw	1
  1262  007B64  1A06               	xorwf	___awdiv@sign,f,c
  1263  007B66                     l660:
  1264  007B66  0E00               	movlw	0
  1265  007B68  6E08               	movwf	___awdiv@quotient+1,c
  1266  007B6A  0E00               	movlw	0
  1267  007B6C  6E07               	movwf	___awdiv@quotient,c
  1268  007B6E  5004               	movf	___awdiv@divisor+1,w,c
  1269  007B70  1003               	iorwf	___awdiv@divisor,w,c
  1270  007B72  B4D8               	btfsc	status,2,c
  1271  007B74  D01C               	goto	l682
  1272  007B76  0E01               	movlw	1
  1273  007B78  6E05               	movwf	___awdiv@counter,c
  1274  007B7A  D004               	goto	l668
  1275  007B7C                     l666:
  1276  007B7C  90D8               	bcf	status,0,c
  1277  007B7E  3603               	rlcf	___awdiv@divisor,f,c
  1278  007B80  3604               	rlcf	___awdiv@divisor+1,f,c
  1279  007B82  2A05               	incf	___awdiv@counter,f,c
  1280  007B84                     l668:
  1281  007B84  AE04               	btfss	___awdiv@divisor+1,7,c
  1282  007B86  D7FA               	goto	l666
  1283  007B88                     l670:
  1284  007B88  90D8               	bcf	status,0,c
  1285  007B8A  3607               	rlcf	___awdiv@quotient,f,c
  1286  007B8C  3608               	rlcf	___awdiv@quotient+1,f,c
  1287  007B8E  5003               	movf	___awdiv@divisor,w,c
  1288  007B90  5C01               	subwf	___awdiv@dividend,w,c
  1289  007B92  5004               	movf	___awdiv@divisor+1,w,c
  1290  007B94  5802               	subwfb	___awdiv@dividend+1,w,c
  1291  007B96  A0D8               	btfss	status,0,c
  1292  007B98  D005               	goto	l678
  1293  007B9A  5003               	movf	___awdiv@divisor,w,c
  1294  007B9C  5E01               	subwf	___awdiv@dividend,f,c
  1295  007B9E  5004               	movf	___awdiv@divisor+1,w,c
  1296  007BA0  5A02               	subwfb	___awdiv@dividend+1,f,c
  1297  007BA2  8007               	bsf	___awdiv@quotient,0,c
  1298  007BA4                     l678:
  1299  007BA4  90D8               	bcf	status,0,c
  1300  007BA6  3204               	rrcf	___awdiv@divisor+1,f,c
  1301  007BA8  3203               	rrcf	___awdiv@divisor,f,c
  1302  007BAA  2E05               	decfsz	___awdiv@counter,f,c
  1303  007BAC  D7ED               	goto	l670
  1304  007BAE                     l682:
  1305  007BAE  5006               	movf	___awdiv@sign,w,c
  1306  007BB0  B4D8               	btfsc	status,2,c
  1307  007BB2  D004               	goto	l686
  1308  007BB4  6C07               	negf	___awdiv@quotient,c
  1309  007BB6  1E08               	comf	___awdiv@quotient+1,f,c
  1310  007BB8  B0D8               	btfsc	status,0,c
  1311  007BBA  2A08               	incf	___awdiv@quotient+1,f,c
  1312  007BBC                     l686:
  1313  007BBC  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1314  007BC0  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1315  007BC4  0012               	return	
  1316  007BC6                     __end_of___awdiv:
  1317                           	opt stack 0
  1318                           tblptru	equ	0xFF8
  1319                           tblptrh	equ	0xFF7
  1320                           tblptrl	equ	0xFF6
  1321                           tablat	equ	0xFF5
  1322                           prodl	equ	0xFF3
  1323                           status	equ	0xFD8
  1324                           tblptru	equ	0xFF8
  1325                           tblptrh	equ	0xFF7
  1326                           tblptrl	equ	0xFF6
  1327                           tablat	equ	0xFF5
  1328                           prodl	equ	0xFF3
  1329                           status	equ	0xFD8
  1330                           
  1331                           	psect	rparam
  1332  0000                     tblptru	equ	0xFF8
  1333                           tblptrh	equ	0xFF7
  1334                           tblptrl	equ	0xFF6
  1335                           tablat	equ	0xFF5
  1336                           prodl	equ	0xFF3
  1337                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    512
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     26      30
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0     518
                                              8 COMRAM    18    18      0
                            ___awdiv
                           _initChip
 ---------------------------------------------------------------------------------
 (1) _initChip                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     263
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   _initChip

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1A      1E       1       31.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1E      20        0.0%
DATA                 0      0      1E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Oct 27 15:35:36 2014

                     l30 7DF6                       l31 7BCC                       l32 7C54  
                     l45 7DAC             ___awdiv@sign 0006                      l720 7C4E  
                    l660 7B66                      l716 7C48                      l670 7B88  
                    l654 7B46                      l742 7CD8                      l760 7D44  
                    l752 7D1C                      l666 7B7C                      l682 7BAE  
                    l668 7B84                      l772 7D80                      l764 7D58  
                    l756 7D30                      l748 7D08                      l686 7BBC  
                    l678 7BA4                      l776 7D94                      l768 7D6C  
                    l794 7DEA                      l798 7DF0                     _main 7BC6  
                   _temp 001D                     prodl 000FF3                     start 0000  
                  ?_main 0001          __end_of___awdiv 7BC6                    _CMCON 000FB4  
        ___awdiv@divisor 0003          ___awdiv@counter 0005                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    main@i 0017  
                  main@j 000D                    main@k 000F                    main@l 0013  
                  tablat 000FF5          __end_of_values1 7FFF                    status 000FD8  
        __initialization 7AF0             __end_of_main 7DFE                   ??_main 0009  
          __activetblptr 000002                   _ADCON1 000FC1         ___awdiv@dividend 0001  
              ??___awdiv 0005         __end_of_initChip 7B22         ___awdiv@quotient 0007  
                 _output 001B             __mediumconst 7DFE                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 7AF8           __pcstackCOMRAM 0001                ?_initChip 0001  
                __Hparam 0000                  __Lparam 0000                  ___awdiv 7B22  
                __pcinit 7AF0                  __ramtop 0800                  __ptext0 7BC6  
                __ptext1 7B02                  __ptext2 7B22                  _values1 7DFF  
   end_of_initialization 7AF8               ??_initChip 0001            __Lmediumconst 7DFE  
              _PORTAbits 000F80      start_initialization 7AF0              __pbssCOMRAM 001B  
      __size_of_initChip 0020            __pmediumconst 7DFE                 ?___awdiv 0001  
              main@i_120 000B                main@i_124 0015                main@j_121 0019  
              main@k_122 0011                 __Hrparam 0000                 __Lrparam 0000  
       __size_of___awdiv 00A4                 _initChip 7B02            __size_of_main 0238  
